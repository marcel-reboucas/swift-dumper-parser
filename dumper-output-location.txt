(source_file "/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift"
  (import_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:9:8 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:9:1 - line:9:8] 'Foundation')
  (class_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:11:7 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:11:1 - line:22:1] "classe" type='classe.Type' access=internal @_fixed_layout
    (constructor_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:13:5 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:13:5 - line:21:5] "init()" type='classe.Type -> () -> classe' access=internal designated
      (parameter_list
        (parameter "self" type='classe'))
      (parameter_list)
      (brace_stmt
        (call_expr type='()' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:9 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:9 - line:14:30] nothrow
          (declref_expr type='(Any..., separator: String, terminator: String) -> ()' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:9 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:9 - line:14:9] decl=Swift.(file).print(_:separator:terminator:) specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:14 - line:14:30] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:14 - line:14:30]
              (erasure_expr implicit type='Any' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15]
                (call_expr implicit type='String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15] nothrow
                  (constructor_ref_call_expr implicit type='(_builtinStringLiteral: RawPointer, byteSize: Word, isASCII: Int1) -> String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15] nothrow
                    (declref_expr implicit type='String.Type -> (_builtinStringLiteral: RawPointer, byteSize: Word, isASCII: Int1) -> String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15] decl=Swift.(file).String.init(_builtinStringLiteral:byteSize:isASCII:) specialized=no)
                    (type_expr implicit type='String.Type' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15] typerepr='String'))
                  (string_literal_expr type='(_builtinStringLiteral: Builtin.RawPointer, byteSize: Builtin.Word, isASCII: Builtin.Int1)' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:14:15 - line:14:15] encoding=utf8 value="Hello, World!"))))))
        (pattern_binding_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:9 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:9 - line:16:27]
          (pattern_typed type='String?'
            (pattern_named type='String?' 'a')
)
          (call_expr implicit type='String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27] nothrow
            (constructor_ref_call_expr implicit type='(nilLiteral: ()) -> String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27] nothrow
              (declref_expr implicit type='Optional<String>.Type -> (nilLiteral: ()) -> String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27] decl=Swift.(file).Optional.init(nilLiteral:) [with String] specialized=no)
              (type_expr implicit type='String?.Type' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27] typerepr='String?'))
            (tuple_expr implicit type='(nilLiteral: ())' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27] names=nilLiteral
              (tuple_expr type='()' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:27 - line:16:27]))))
        (var_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:13 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:13 - line:16:13] "a" type='String?' access=private let storage_kind=stored)
        (pattern_binding_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:9 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:9 - line:18:28]
          (pattern_named type='String?' 'nilCol')
          (binary_expr type='String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:25 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:28] nothrow
            (declref_expr type='(String?, @autoclosure () throws -> String?) throws -> String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:25 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:25 - line:18:25] decl=Swift.(file).?? [with String] specialized=no)
            (tuple_expr implicit type='(String?, @autoclosure () throws -> String?)' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:28]
              (inject_into_optional implicit type='String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22]
                (call_expr implicit type='String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22] nothrow
                  (constructor_ref_call_expr implicit type='(_builtinStringLiteral: RawPointer, byteSize: Word, isASCII: Int1) -> String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22] nothrow
                    (declref_expr implicit type='String.Type -> (_builtinStringLiteral: RawPointer, byteSize: Word, isASCII: Int1) -> String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22] decl=Swift.(file).String.init(_builtinStringLiteral:byteSize:isASCII:) specialized=no)
                    (type_expr implicit type='String.Type' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22] typerepr='String'))
                  (string_literal_expr type='(_builtinStringLiteral: Builtin.RawPointer, byteSize: Builtin.Word, isASCII: Builtin.Int1)' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:22 - line:18:22] encoding=utf8 value="")))
              (autoclosure_expr implicit type='@autoclosure () throws -> String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:28 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:28 - line:18:28] discriminator=0 captures=(a<noescape>)

                (parameter_list)
                (declref_expr type='String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:28 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:28 - line:18:28] decl=DumpTest.(file).classe.init.a@/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:13 specialized=no)))))
        (var_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:13 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:18:13 - line:18:13] "nilCol" type='String?' access=private storage_kind=stored)
        (pattern_binding_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:9 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:9 - line:20:40]
          (pattern_named type='Distance?' 'characters')
          (optional_evaluation_expr implicit type='Distance?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:40 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:40]
            (inject_into_optional implicit type='Distance?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:40 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:40]
              (member_ref_expr type='Distance' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:40 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:40] decl=Swift.(file).CollectionType.count [with String.CharacterView[String.CharacterView: CollectionType module Swift], IndexingGenerator<String.CharacterView>[IndexingGenerator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, Int, Int, _DisabledRangeIndex_, Character> (<Elements : Indexable> IndexingGenerator<Elements>: GeneratorType module Swift)], Character, String.CharacterView.Index[String.CharacterView.Index: ForwardIndexType module Swift], Int[Int: _SignedIntegerType module Swift], Int[Int: _BuiltinIntegerLiteralConvertible module Swift], _DisabledRangeIndex_, String.CharacterView[String.CharacterView: Indexable module Swift, String.CharacterView: SequenceType module Swift], Generator[IndexingGenerator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, Int, Int, _DisabledRangeIndex_, Character> (<Elements : Indexable> IndexingGenerator<Elements>: GeneratorType module Swift)], Character, String.CharacterView.Index[String.CharacterView.Index: ForwardIndexType module Swift], Int[Int: _SignedIntegerType module Swift], Int[Int: _BuiltinIntegerLiteralConvertible module Swift], _DisabledRangeIndex_, SubSequence, Character, Character]
                (member_ref_expr type='String.CharacterView' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:29 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:29] decl=Swift.(file).String.characters
                  (bind_optional_expr type='String' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:27 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:27] depth=0
                    (declref_expr type='String?' location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:26 - line:20:26] decl=DumpTest.(file).classe.init.a@/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:16:13 specialized=no)))))))
        (var_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:13 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:20:13 - line:20:13] "characters" type='Distance?' access=private let storage_kind=stored)
        (return_stmt)))
    (destructor_decl location=/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:11:7 range=[/Users/Marcel/Documents/Development/DumpTest/DumpTest/main.swift:11:7 - line:11:7] implicit "deinit" type='classe -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='classe'))
      (brace_stmt))))
